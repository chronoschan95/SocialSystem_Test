{"ast":null,"code":"import { ref, computed } from 'vue';\nimport Icon from '../components/common/Icon.vue';\nimport RoundedButton from '../components/common/RoundedButton.vue';\nexport default {\n  name: 'Register',\n  components: {\n    Icon,\n    RoundedButton\n  },\n  setup() {\n    const phone = ref('');\n    const verifyCode = ref('');\n    const username = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const agreeToTerms = ref(false);\n    const showPassword = ref(false);\n    const showConfirmPassword = ref(false);\n    const countdown = ref(0);\n\n    // 错误状态\n    const phoneError = ref('');\n    const verifyError = ref('');\n    const usernameError = ref('');\n    const passwordError = ref('');\n    const confirmPasswordError = ref('');\n\n    // 验证手机号\n    const validatePhone = () => {\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      if (!phone.value) {\n        phoneError.value = '请输入手机号';\n      } else if (!phoneRegex.test(phone.value)) {\n        phoneError.value = '请输入正确的手机号';\n      } else {\n        phoneError.value = '';\n      }\n    };\n\n    // 验证用户名\n    const validateUsername = () => {\n      if (!username.value) {\n        usernameError.value = '请输入用户名';\n      } else if (username.value.length < 2) {\n        usernameError.value = '用户名至少2个字符';\n      } else {\n        usernameError.value = '';\n      }\n    };\n\n    // 验证密码强度\n    const passwordStrength = computed(() => {\n      if (!password.value) return '';\n      const hasLetter = /[a-zA-Z]/.test(password.value);\n      const hasNumber = /\\d/.test(password.value);\n      const hasSpecial = /[!@#$%^&*]/.test(password.value);\n      const length = password.value.length;\n      if (length < 8) return '弱';\n      if (hasLetter && hasNumber && hasSpecial) return '强';\n      if (hasLetter && hasNumber || hasLetter && hasSpecial || hasNumber && hasSpecial) return '中';\n      return '弱';\n    });\n\n    // 验证密码\n    const validatePassword = () => {\n      if (!password.value) {\n        passwordError.value = '请输入密码';\n      } else if (password.value.length < 8) {\n        passwordError.value = '密码至少8个字符';\n      } else {\n        passwordError.value = '';\n      }\n    };\n\n    // 验证确认密码\n    const validateConfirmPassword = () => {\n      if (!confirmPassword.value) {\n        confirmPasswordError.value = '请确认密码';\n      } else if (confirmPassword.value !== password.value) {\n        confirmPasswordError.value = '两次输入的密码不一致';\n      } else {\n        confirmPasswordError.value = '';\n      }\n    };\n\n    // 发送验证码\n    const sendVerifyCode = async () => {\n      if (countdown.value > 0) return;\n      // TODO: 调用发送验证码API\n      countdown.value = 60;\n      const timer = setInterval(() => {\n        countdown.value--;\n        if (countdown.value <= 0) {\n          clearInterval(timer);\n        }\n      }, 1000);\n    };\n\n    // 表单验证\n    const isValid = computed(() => {\n      return !phoneError.value && !verifyError.value && !usernameError.value && !passwordError.value && !confirmPasswordError.value && phone.value && verifyCode.value && username.value && password.value && confirmPassword.value && agreeToTerms.value;\n    });\n\n    // 是否可以发送验证码\n    const canSendCode = computed(() => {\n      return !phoneError.value && phone.value;\n    });\n    return {\n      phone,\n      verifyCode,\n      username,\n      password,\n      confirmPassword,\n      agreeToTerms,\n      showPassword,\n      showConfirmPassword,\n      countdown,\n      phoneError,\n      verifyError,\n      usernameError,\n      passwordError,\n      confirmPasswordError,\n      passwordStrength,\n      isValid,\n      canSendCode,\n      validatePhone,\n      validateUsername,\n      validatePassword,\n      validateConfirmPassword,\n      sendVerifyCode\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","Icon","RoundedButton","name","components","setup","phone","verifyCode","username","password","confirmPassword","agreeToTerms","showPassword","showConfirmPassword","countdown","phoneError","verifyError","usernameError","passwordError","confirmPasswordError","validatePhone","phoneRegex","value","test","validateUsername","length","passwordStrength","hasLetter","hasNumber","hasSpecial","validatePassword","validateConfirmPassword","sendVerifyCode","timer","setInterval","clearInterval","isValid","canSendCode"],"sources":["/Users/chronoschan/Documents/SophomoreYear/JAVA/ExperimentX/CSys/V1/frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"auth-page\">\n    <div class=\"auth-container glass-effect\">\n      <div class=\"auth-header\">\n        <img src=\"@/assets/logo.svg\" alt=\"Logo\" class=\"logo\" />\n        <h2>注册账号</h2>\n        <p class=\"subtitle\">加入我们的校园社交圈</p>\n      </div>\n      \n      <form @submit.prevent=\"handleRegister\" class=\"auth-form\">\n        <!-- 手机号输入 -->\n        <div class=\"form-group\">\n          <label>手机号</label>\n          <div class=\"phone-input glass-effect-light\">\n            <span class=\"prefix\">+86</span>\n            <input \n              type=\"tel\" \n              v-model=\"phone\"\n              placeholder=\"请输入手机号\"\n              @input=\"validatePhone\"\n              maxlength=\"11\"\n            />\n          </div>\n          <span class=\"error\" v-if=\"phoneError\">{{ phoneError }}</span>\n        </div>\n        \n        <!-- 验证码 -->\n        <div class=\"form-group\">\n          <label>验证码</label>\n          <div class=\"verify-input glass-effect-light\">\n            <input \n              type=\"text\" \n              v-model=\"verifyCode\"\n              placeholder=\"请输入验证码\"\n              maxlength=\"6\"\n            />\n            <button \n              type=\"button\" \n              class=\"verify-btn\"\n              :disabled=\"!canSendCode || countdown > 0\"\n              @click=\"sendVerifyCode\"\n            >\n              {{ countdown > 0 ? `${countdown}s后重试` : '获取验证码' }}\n            </button>\n          </div>\n          <span class=\"error\" v-if=\"verifyError\">{{ verifyError }}</span>\n        </div>\n        \n        <!-- 用户名 -->\n        <div class=\"form-group\">\n          <label>用户名</label>\n          <div class=\"input-wrapper glass-effect-light\">\n            <input \n              type=\"text\" \n              v-model=\"username\"\n              placeholder=\"请输入用户名\"\n              @input=\"validateUsername\"\n            />\n          </div>\n          <span class=\"error\" v-if=\"usernameError\">{{ usernameError }}</span>\n        </div>\n        \n        <!-- 密码 -->\n        <div class=\"form-group\">\n          <label>密码</label>\n          <div class=\"password-input glass-effect-light\">\n            <input \n              :type=\"showPassword ? 'text' : 'password'\"\n              v-model=\"password\"\n              placeholder=\"请设置密码\"\n              @input=\"validatePassword\"\n            />\n            <span class=\"toggle-password\" @click=\"showPassword = !showPassword\">\n              <Icon :name=\"showPassword ? 'eye-off' : 'eye'\" />\n            </span>\n          </div>\n          <span class=\"error\" v-if=\"passwordError\">{{ passwordError }}</span>\n          <span class=\"password-strength\" v-if=\"password\">\n            密码强度：{{ passwordStrength }}\n          </span>\n        </div>\n        \n        <!-- 确认密码 -->\n        <div class=\"form-group\">\n          <label>确认密码</label>\n          <div class=\"password-input glass-effect-light\">\n            <input \n              :type=\"showConfirmPassword ? 'text' : 'password'\"\n              v-model=\"confirmPassword\"\n              placeholder=\"请再次输入密码\"\n              @input=\"validateConfirmPassword\"\n            />\n            <span class=\"toggle-password\" @click=\"showConfirmPassword = !showConfirmPassword\">\n              <Icon :name=\"showConfirmPassword ? 'eye-off' : 'eye'\" />\n            </span>\n          </div>\n          <span class=\"error\" v-if=\"confirmPasswordError\">{{ confirmPasswordError }}</span>\n        </div>\n        \n        <!-- 用户协议 -->\n        <div class=\"form-group agreement\">\n          <label class=\"checkbox-label\">\n            <input \n              type=\"checkbox\" \n              v-model=\"agreeToTerms\"\n            />\n            <span>我已阅读并同意</span>\n          </label>\n          <a href=\"#\" @click.prevent=\"showTerms\">用户协议</a>\n          <span>和</span>\n          <a href=\"#\" @click.prevent=\"showPrivacy\">隐私政策</a>\n        </div>\n        \n        <RoundedButton \n          type=\"submit\" \n          :disabled=\"!isValid\"\n          class=\"submit-btn\"\n        >\n          注册\n        </RoundedButton>\n        \n        <p class=\"auth-switch\">\n          已有账号？\n          <router-link to=\"/login\">立即登录</router-link>\n        </p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport Icon from '../components/common/Icon.vue'\nimport RoundedButton from '../components/common/RoundedButton.vue'\n\nexport default {\n  name: 'Register',\n  components: {\n    Icon,\n    RoundedButton\n  },\n  \n  setup() {\n    const phone = ref('')\n    const verifyCode = ref('')\n    const username = ref('')\n    const password = ref('')\n    const confirmPassword = ref('')\n    const agreeToTerms = ref(false)\n    const showPassword = ref(false)\n    const showConfirmPassword = ref(false)\n    const countdown = ref(0)\n    \n    // 错误状态\n    const phoneError = ref('')\n    const verifyError = ref('')\n    const usernameError = ref('')\n    const passwordError = ref('')\n    const confirmPasswordError = ref('')\n    \n    // 验证手机号\n    const validatePhone = () => {\n      const phoneRegex = /^1[3-9]\\d{9}$/\n      if (!phone.value) {\n        phoneError.value = '请输入手机号'\n      } else if (!phoneRegex.test(phone.value)) {\n        phoneError.value = '请输入正确的手机号'\n      } else {\n        phoneError.value = ''\n      }\n    }\n    \n    // 验证用户名\n    const validateUsername = () => {\n      if (!username.value) {\n        usernameError.value = '请输入用户名'\n      } else if (username.value.length < 2) {\n        usernameError.value = '用户名至少2个字符'\n      } else {\n        usernameError.value = ''\n      }\n    }\n    \n    // 验证密码强度\n    const passwordStrength = computed(() => {\n      if (!password.value) return ''\n      const hasLetter = /[a-zA-Z]/.test(password.value)\n      const hasNumber = /\\d/.test(password.value)\n      const hasSpecial = /[!@#$%^&*]/.test(password.value)\n      const length = password.value.length\n      \n      if (length < 8) return '弱'\n      if (hasLetter && hasNumber && hasSpecial) return '强'\n      if ((hasLetter && hasNumber) || (hasLetter && hasSpecial) || (hasNumber && hasSpecial)) return '中'\n      return '弱'\n    })\n    \n    // 验证密码\n    const validatePassword = () => {\n      if (!password.value) {\n        passwordError.value = '请输入密码'\n      } else if (password.value.length < 8) {\n        passwordError.value = '密码至少8个字符'\n      } else {\n        passwordError.value = ''\n      }\n    }\n    \n    // 验证确认密码\n    const validateConfirmPassword = () => {\n      if (!confirmPassword.value) {\n        confirmPasswordError.value = '请确认密码'\n      } else if (confirmPassword.value !== password.value) {\n        confirmPasswordError.value = '两次输入的密码不一致'\n      } else {\n        confirmPasswordError.value = ''\n      }\n    }\n    \n    // 发送验证码\n    const sendVerifyCode = async () => {\n      if (countdown.value > 0) return\n      // TODO: 调用发送验证码API\n      countdown.value = 60\n      const timer = setInterval(() => {\n        countdown.value--\n        if (countdown.value <= 0) {\n          clearInterval(timer)\n        }\n      }, 1000)\n    }\n    \n    // 表单验证\n    const isValid = computed(() => {\n      return !phoneError.value &&\n        !verifyError.value &&\n        !usernameError.value &&\n        !passwordError.value &&\n        !confirmPasswordError.value &&\n        phone.value &&\n        verifyCode.value &&\n        username.value &&\n        password.value &&\n        confirmPassword.value &&\n        agreeToTerms.value\n    })\n    \n    // 是否可以发送验证码\n    const canSendCode = computed(() => {\n      return !phoneError.value && phone.value\n    })\n    \n    return {\n      phone,\n      verifyCode,\n      username,\n      password,\n      confirmPassword,\n      agreeToTerms,\n      showPassword,\n      showConfirmPassword,\n      countdown,\n      phoneError,\n      verifyError,\n      usernameError,\n      passwordError,\n      confirmPasswordError,\n      passwordStrength,\n      isValid,\n      canSendCode,\n      validatePhone,\n      validateUsername,\n      validatePassword,\n      validateConfirmPassword,\n      sendVerifyCode\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.auth-page {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  background: linear-gradient(135deg, var(--background-color), var(--primary-color));\n  \n  .auth-container {\n    width: 100%;\n    max-width: 400px;\n    padding: 40px;\n    \n    .auth-header {\n      text-align: center;\n      margin-bottom: 40px;\n      \n      .logo {\n        width: 80px;\n        margin-bottom: 20px;\n      }\n      \n      h2 {\n        font-size: 24px;\n        margin-bottom: 10px;\n      }\n      \n      .subtitle {\n        color: var(--text-color);\n        opacity: 0.8;\n      }\n    }\n  }\n  \n  .form-group {\n    margin-bottom: 24px;\n    \n    label {\n      display: block;\n      margin-bottom: 8px;\n      font-weight: 500;\n    }\n    \n    .error {\n      color: #ff4d4f;\n      font-size: 0.8rem;\n      margin-top: 4px;\n    }\n    \n    .password-strength {\n      font-size: 0.8rem;\n      margin-top: 4px;\n      color: var(--text-color);\n    }\n  }\n  \n  .glass-effect-light {\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(5px);\n    border-radius: var(--border-radius-md);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    padding: 12px;\n    display: flex;\n    align-items: center;\n    \n    input {\n      flex: 1;\n      background: none;\n      border: none;\n      outline: none;\n      color: var(--text-color);\n      \n      &::placeholder {\n        color: rgba(255, 255, 255, 0.5);\n      }\n    }\n  }\n  \n  .verify-input {\n    .verify-btn {\n      padding: 6px 12px;\n      background: var(--primary-color);\n      border: none;\n      border-radius: var(--border-radius-sm);\n      color: white;\n      cursor: pointer;\n      white-space: nowrap;\n      \n      &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n    }\n  }\n  \n  .agreement {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    font-size: 0.9rem;\n    \n    a {\n      color: var(--primary-color);\n      text-decoration: none;\n      \n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n  \n  .submit-btn {\n    width: 100%;\n    margin-top: 20px;\n  }\n  \n  .auth-switch {\n    text-align: center;\n    margin-top: 20px;\n    \n    a {\n      color: var(--primary-color);\n      text-decoration: none;\n      \n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}