{"ast":null,"code":"export default {\n  namespaced: true,\n  state: () => ({\n    isAuthenticated: false,\n    user: null,\n    token: null\n  }),\n  mutations: {\n    SET_AUTH(state, {\n      user,\n      token\n    }) {\n      state.isAuthenticated = true;\n      state.user = user;\n      state.token = token;\n    },\n    CLEAR_AUTH(state) {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n    }\n  },\n  actions: {\n    login({\n      commit\n    }, {\n      user,\n      token\n    }) {\n      // 保存到 localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // 更新状态\n      commit('SET_AUTH', {\n        user,\n        token\n      });\n    },\n    logout({\n      commit\n    }) {\n      // 清除 localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n\n      // 清除状态\n      commit('CLEAR_AUTH');\n    },\n    // 初始化认证状态\n    initAuth({\n      commit\n    }) {\n      const token = localStorage.getItem('token');\n      const user = JSON.parse(localStorage.getItem('user'));\n      if (token && user) {\n        commit('SET_AUTH', {\n          user,\n          token\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["namespaced","state","isAuthenticated","user","token","mutations","SET_AUTH","CLEAR_AUTH","actions","login","commit","localStorage","setItem","JSON","stringify","logout","removeItem","initAuth","getItem","parse"],"sources":["/Users/chronoschan/Documents/SophomoreYear/JAVA/ExperimentX/CSys/V1/frontend/src/store/modules/auth.js"],"sourcesContent":["export default {\n  namespaced: true,\n  \n  state: () => ({\n    isAuthenticated: false,\n    user: null,\n    token: null\n  }),\n  \n  mutations: {\n    SET_AUTH(state, { user, token }) {\n      state.isAuthenticated = true\n      state.user = user\n      state.token = token\n    },\n    \n    CLEAR_AUTH(state) {\n      state.isAuthenticated = false\n      state.user = null\n      state.token = null\n    }\n  },\n  \n  actions: {\n    login({ commit }, { user, token }) {\n      // 保存到 localStorage\n      localStorage.setItem('token', token)\n      localStorage.setItem('user', JSON.stringify(user))\n      \n      // 更新状态\n      commit('SET_AUTH', { user, token })\n    },\n    \n    logout({ commit }) {\n      // 清除 localStorage\n      localStorage.removeItem('token')\n      localStorage.removeItem('user')\n      \n      // 清除状态\n      commit('CLEAR_AUTH')\n    },\n    \n    // 初始化认证状态\n    initAuth({ commit }) {\n      const token = localStorage.getItem('token')\n      const user = JSON.parse(localStorage.getItem('user'))\n      \n      if (token && user) {\n        commit('SET_AUTH', { user, token })\n      }\n    }\n  }\n} "],"mappings":"AAAA,eAAe;EACbA,UAAU,EAAE,IAAI;EAEhBC,KAAK,EAAEA,CAAA,MAAO;IACZC,eAAe,EAAE,KAAK;IACtBC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFC,SAAS,EAAE;IACTC,QAAQA,CAACL,KAAK,EAAE;MAAEE,IAAI;MAAEC;IAAM,CAAC,EAAE;MAC/BH,KAAK,CAACC,eAAe,GAAG,IAAI;MAC5BD,KAAK,CAACE,IAAI,GAAGA,IAAI;MACjBF,KAAK,CAACG,KAAK,GAAGA,KAAK;IACrB,CAAC;IAEDG,UAAUA,CAACN,KAAK,EAAE;MAChBA,KAAK,CAACC,eAAe,GAAG,KAAK;MAC7BD,KAAK,CAACE,IAAI,GAAG,IAAI;MACjBF,KAAK,CAACG,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EAEDI,OAAO,EAAE;IACPC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAAEP,IAAI;MAAEC;IAAM,CAAC,EAAE;MACjC;MACAO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;MACpCO,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI,CAAC,CAAC;;MAElD;MACAO,MAAM,CAAC,UAAU,EAAE;QAAEP,IAAI;QAAEC;MAAM,CAAC,CAAC;IACrC,CAAC;IAEDW,MAAMA,CAAC;MAAEL;IAAO,CAAC,EAAE;MACjB;MACAC,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;MAChCL,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;;MAE/B;MACAN,MAAM,CAAC,YAAY,CAAC;IACtB,CAAC;IAED;IACAO,QAAQA,CAAC;MAAEP;IAAO,CAAC,EAAE;MACnB,MAAMN,KAAK,GAAGO,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMf,IAAI,GAAGU,IAAI,CAACM,KAAK,CAACR,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;MAErD,IAAId,KAAK,IAAID,IAAI,EAAE;QACjBO,MAAM,CAAC,UAAU,EAAE;UAAEP,IAAI;UAAEC;QAAM,CAAC,CAAC;MACrC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}