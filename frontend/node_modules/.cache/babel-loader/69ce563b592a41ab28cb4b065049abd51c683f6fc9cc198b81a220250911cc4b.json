{"ast":null,"code":"import RoundedButton from '../components/common/RoundedButton.vue';\nexport default {\n  name: 'Register',\n  components: {\n    RoundedButton\n  },\n  data() {\n    return {\n      phone: '',\n      username: '',\n      password: '',\n      confirmPassword: '',\n      phoneError: '',\n      passwordError: '',\n      isValid: false\n    };\n  },\n  methods: {\n    validatePhone() {\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      if (!this.phone) {\n        this.phoneError = '请输入手机号';\n      } else if (!phoneRegex.test(this.phone)) {\n        this.phoneError = '请输入正确的手机号';\n      } else {\n        this.phoneError = '';\n      }\n      this.checkValidity();\n    },\n    validatePassword() {\n      if (this.password !== this.confirmPassword) {\n        this.passwordError = '两次输入的密码不一致';\n      } else {\n        this.passwordError = '';\n      }\n      this.checkValidity();\n    },\n    checkValidity() {\n      this.isValid = !this.phoneError && !this.passwordError && this.phone && this.username && this.password && this.confirmPassword;\n    },\n    async handleRegister() {\n      if (!this.isValid) return;\n      try {\n        // 这里添加实际的注册逻辑\n        await this.$store.dispatch('register', {\n          phone: this.phone,\n          username: this.username,\n          password: this.password\n        });\n        this.$router.push('/login');\n      } catch (error) {\n        console.error('Registration failed:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["RoundedButton","name","components","data","phone","username","password","confirmPassword","phoneError","passwordError","isValid","methods","validatePhone","phoneRegex","test","checkValidity","validatePassword","handleRegister","$store","dispatch","$router","push","error","console"],"sources":["/Users/chronoschan/Documents/SophomoreYear/JAVA/ExperimentX/CSys/V1/frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"auth-page\">\n    <div class=\"auth-container glass-effect\">\n      <h2>注册</h2>\n      <form @submit.prevent=\"handleRegister\" class=\"auth-form\">\n        <div class=\"form-group\">\n          <label>手机号</label>\n          <div class=\"phone-input\">\n            <span class=\"prefix\">+86</span>\n            <input \n              type=\"tel\" \n              v-model=\"phone\"\n              placeholder=\"请输入手机号\"\n              @input=\"validatePhone\"\n            />\n          </div>\n          <span class=\"error\" v-if=\"phoneError\">{{ phoneError }}</span>\n        </div>\n        \n        <div class=\"form-group\">\n          <label>用户名</label>\n          <input \n            type=\"text\" \n            v-model=\"username\"\n            placeholder=\"请输入用户名\"\n          />\n        </div>\n        \n        <div class=\"form-group\">\n          <label>密码</label>\n          <input \n            type=\"password\" \n            v-model=\"password\"\n            placeholder=\"请输入密码\"\n          />\n        </div>\n        \n        <div class=\"form-group\">\n          <label>确认密码</label>\n          <input \n            type=\"password\" \n            v-model=\"confirmPassword\"\n            placeholder=\"请再次输入密码\"\n            @input=\"validatePassword\"\n          />\n          <span class=\"error\" v-if=\"passwordError\">{{ passwordError }}</span>\n        </div>\n        \n        <RoundedButton type=\"submit\" :disabled=\"!isValid\">\n          注册\n        </RoundedButton>\n        \n        <p class=\"auth-switch\">\n          已有账号？\n          <router-link to=\"/login\">立即登录</router-link>\n        </p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport RoundedButton from '../components/common/RoundedButton.vue'\n\nexport default {\n  name: 'Register',\n  components: {\n    RoundedButton\n  },\n  data() {\n    return {\n      phone: '',\n      username: '',\n      password: '',\n      confirmPassword: '',\n      phoneError: '',\n      passwordError: '',\n      isValid: false\n    }\n  },\n  methods: {\n    validatePhone() {\n      const phoneRegex = /^1[3-9]\\d{9}$/\n      if (!this.phone) {\n        this.phoneError = '请输入手机号'\n      } else if (!phoneRegex.test(this.phone)) {\n        this.phoneError = '请输入正确的手机号'\n      } else {\n        this.phoneError = ''\n      }\n      this.checkValidity()\n    },\n    validatePassword() {\n      if (this.password !== this.confirmPassword) {\n        this.passwordError = '两次输入的密码不一致'\n      } else {\n        this.passwordError = ''\n      }\n      this.checkValidity()\n    },\n    checkValidity() {\n      this.isValid = !this.phoneError && \n                    !this.passwordError && \n                    this.phone && \n                    this.username && \n                    this.password && \n                    this.confirmPassword\n    },\n    async handleRegister() {\n      if (!this.isValid) return\n      \n      try {\n        // 这里添加实际的注册逻辑\n        await this.$store.dispatch('register', {\n          phone: this.phone,\n          username: this.username,\n          password: this.password\n        })\n        this.$router.push('/login')\n      } catch (error) {\n        console.error('Registration failed:', error)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n// 使用与Login.vue相同的样式\n.auth-page {\n  // ... 样式同 Login.vue\n}\n</style> "],"mappings":"AA8DA,OAAOA,aAAY,MAAO,wCAAuC;AAEjE,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE,EAAE;MACjBC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,MAAMC,UAAS,GAAI,eAAc;MACjC,IAAI,CAAC,IAAI,CAACT,KAAK,EAAE;QACf,IAAI,CAACI,UAAS,GAAI,QAAO;MAC3B,OAAO,IAAI,CAACK,UAAU,CAACC,IAAI,CAAC,IAAI,CAACV,KAAK,CAAC,EAAE;QACvC,IAAI,CAACI,UAAS,GAAI,WAAU;MAC9B,OAAO;QACL,IAAI,CAACA,UAAS,GAAI,EAAC;MACrB;MACA,IAAI,CAACO,aAAa,CAAC;IACrB,CAAC;IACDC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACV,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACE,aAAY,GAAI,YAAW;MAClC,OAAO;QACL,IAAI,CAACA,aAAY,GAAI,EAAC;MACxB;MACA,IAAI,CAACM,aAAa,CAAC;IACrB,CAAC;IACDA,aAAaA,CAAA,EAAG;MACd,IAAI,CAACL,OAAM,GAAI,CAAC,IAAI,CAACF,UAAS,IAChB,CAAC,IAAI,CAACC,aAAY,IAClB,IAAI,CAACL,KAAI,IACT,IAAI,CAACC,QAAO,IACZ,IAAI,CAACC,QAAO,IACZ,IAAI,CAACC,eAAc;IACnC,CAAC;IACD,MAAMU,cAAcA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACP,OAAO,EAAE;MAEnB,IAAI;QACF;QACA,MAAM,IAAI,CAACQ,MAAM,CAACC,QAAQ,CAAC,UAAU,EAAE;UACrCf,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;QACD,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC,QAAQ;MAC5B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK;MAC7C;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}