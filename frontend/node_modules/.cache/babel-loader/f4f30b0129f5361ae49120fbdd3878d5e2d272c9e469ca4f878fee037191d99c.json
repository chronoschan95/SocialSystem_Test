{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: \"app\",\n    class: _normalizeClass({\n      'dark-mode': $setup.isDarkMode,\n      'light-mode': !$setup.isDarkMode\n    })\n  }, [_createElementVNode(\"div\", {\n    class: \"app-background\",\n    style: _normalizeStyle($setup.backgroundStyle)\n  }, [_createVNode(_component_router_view)], 4 /* STYLE */)], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","id","class","_normalizeClass","$setup","isDarkMode","_createElementVNode","style","_normalizeStyle","backgroundStyle","_createVNode","_component_router_view"],"sources":["/Users/chronoschan/Documents/SophomoreYear/JAVA/ExperimentX/CSys/V1/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" :class=\"{ 'dark-mode': isDarkMode, 'light-mode': !isDarkMode }\">\n    <div class=\"app-background\" :style=\"backgroundStyle\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'App',\n  setup() {\n    const store = useStore()\n    const isDarkMode = computed(() => store.state.theme.isDarkMode)\n    const customBackground = computed(() => store.state.theme.customBackground)\n    \n    const backgroundStyle = computed(() => ({\n      backgroundImage: customBackground.value \n        ? `url(${customBackground.value})`\n        : 'var(--background)'\n    }))\n\n    return {\n      isDarkMode,\n      backgroundStyle\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\n#app {\n  min-height: 100vh;\n  \n  .app-background {\n    min-height: 100vh;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    transition: background-image var(--transition-speed);\n  }\n}\n\n// 全局过渡效果\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity var(--transition-speed);\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style> "],"mappings":";;;uBACEA,mBAAA,CAIM;IAJDC,EAAE,EAAC,KAAK;IAAEC,KAAK,EADtBC,eAAA;MAAA,aACuCC,MAAA,CAAAC,UAAU;MAAA,eAAiBD,MAAA,CAAAC;IAAU;MACxEC,mBAAA,CAEM;IAFDJ,KAAK,EAAC,gBAAgB;IAAEK,KAAK,EAFtCC,eAAA,CAEwCJ,MAAA,CAAAK,eAAe;MACjDC,YAAA,CAAeC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}