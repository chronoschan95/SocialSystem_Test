{"ast":null,"code":"import RoundedButton from '../components/common/RoundedButton.vue';\nexport default {\n  name: 'Login',\n  components: {\n    RoundedButton\n  },\n  data() {\n    return {\n      phone: '',\n      password: '',\n      phoneError: '',\n      isValid: false\n    };\n  },\n  methods: {\n    validatePhone() {\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      if (!this.phone) {\n        this.phoneError = '请输入手机号';\n      } else if (!phoneRegex.test(this.phone)) {\n        this.phoneError = '请输入正确的手机号';\n      } else {\n        this.phoneError = '';\n      }\n      this.checkValidity();\n    },\n    checkValidity() {\n      this.isValid = !this.phoneError && this.phone && this.password;\n    },\n    async handleLogin() {\n      if (!this.isValid) return;\n      try {\n        // 这里添加实际的登录逻辑\n        const response = await this.$store.dispatch('login', {\n          phone: this.phone,\n          password: this.password\n        });\n        this.$router.push('/');\n      } catch (error) {\n        console.error('Login failed:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["RoundedButton","name","components","data","phone","password","phoneError","isValid","methods","validatePhone","phoneRegex","test","checkValidity","handleLogin","response","$store","dispatch","$router","push","error","console"],"sources":["/Users/chronoschan/Documents/SophomoreYear/JAVA/ExperimentX/CSys/V1/frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"auth-page\">\n    <div class=\"auth-container glass-effect\">\n      <h2>登录</h2>\n      <form @submit.prevent=\"handleLogin\" class=\"auth-form\">\n        <div class=\"form-group\">\n          <label>手机号</label>\n          <div class=\"phone-input\">\n            <span class=\"prefix\">+86</span>\n            <input \n              type=\"tel\" \n              v-model=\"phone\"\n              placeholder=\"请输入手机号\"\n              @input=\"validatePhone\"\n            />\n          </div>\n          <span class=\"error\" v-if=\"phoneError\">{{ phoneError }}</span>\n        </div>\n        \n        <div class=\"form-group\">\n          <label>密码</label>\n          <input \n            type=\"password\" \n            v-model=\"password\"\n            placeholder=\"请输入密码\"\n          />\n        </div>\n        \n        <RoundedButton type=\"submit\" :disabled=\"!isValid\">\n          登录\n        </RoundedButton>\n        \n        <p class=\"auth-switch\">\n          还没有账号？\n          <router-link to=\"/register\">立即注册</router-link>\n        </p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport RoundedButton from '../components/common/RoundedButton.vue'\n\nexport default {\n  name: 'Login',\n  components: {\n    RoundedButton\n  },\n  data() {\n    return {\n      phone: '',\n      password: '',\n      phoneError: '',\n      isValid: false\n    }\n  },\n  methods: {\n    validatePhone() {\n      const phoneRegex = /^1[3-9]\\d{9}$/\n      if (!this.phone) {\n        this.phoneError = '请输入手机号'\n      } else if (!phoneRegex.test(this.phone)) {\n        this.phoneError = '请输入正确的手机号'\n      } else {\n        this.phoneError = ''\n      }\n      this.checkValidity()\n    },\n    checkValidity() {\n      this.isValid = !this.phoneError && this.phone && this.password\n    },\n    async handleLogin() {\n      if (!this.isValid) return\n      \n      try {\n        // 这里添加实际的登录逻辑\n        const response = await this.$store.dispatch('login', {\n          phone: this.phone,\n          password: this.password\n        })\n        this.$router.push('/')\n      } catch (error) {\n        console.error('Login failed:', error)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.auth-page {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  \n  .auth-container {\n    width: 100%;\n    max-width: 400px;\n    padding: 40px;\n    \n    h2 {\n      text-align: center;\n      margin-bottom: 30px;\n      color: var(--text-color);\n    }\n  }\n  \n  .auth-form {\n    .form-group {\n      margin-bottom: 20px;\n      \n      label {\n        display: block;\n        margin-bottom: 8px;\n        color: var(--text-color);\n      }\n      \n      .phone-input {\n        display: flex;\n        align-items: center;\n        border: 1px solid rgba(0,0,0,0.1);\n        border-radius: var(--border-radius-sm);\n        overflow: hidden;\n        \n        .prefix {\n          padding: 10px;\n          background: rgba(0,0,0,0.05);\n          color: var(--text-color);\n        }\n        \n        input {\n          flex: 1;\n          border: none;\n          padding: 10px;\n          outline: none;\n        }\n      }\n      \n      .error {\n        color: #ff4d4f;\n        font-size: 0.8rem;\n        margin-top: 4px;\n      }\n    }\n  }\n  \n  .auth-switch {\n    text-align: center;\n    margin-top: 20px;\n    \n    a {\n      color: var(--primary-color);\n      text-decoration: none;\n      \n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n}\n</style> "],"mappings":"AA0CA,OAAOA,aAAY,MAAO,wCAAuC;AAEjE,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,MAAMC,UAAS,GAAI,eAAc;MACjC,IAAI,CAAC,IAAI,CAACN,KAAK,EAAE;QACf,IAAI,CAACE,UAAS,GAAI,QAAO;MAC3B,OAAO,IAAI,CAACI,UAAU,CAACC,IAAI,CAAC,IAAI,CAACP,KAAK,CAAC,EAAE;QACvC,IAAI,CAACE,UAAS,GAAI,WAAU;MAC9B,OAAO;QACL,IAAI,CAACA,UAAS,GAAI,EAAC;MACrB;MACA,IAAI,CAACM,aAAa,CAAC;IACrB,CAAC;IACDA,aAAaA,CAAA,EAAG;MACd,IAAI,CAACL,OAAM,GAAI,CAAC,IAAI,CAACD,UAAS,IAAK,IAAI,CAACF,KAAI,IAAK,IAAI,CAACC,QAAO;IAC/D,CAAC;IACD,MAAMQ,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACN,OAAO,EAAE;MAEnB,IAAI;QACF;QACA,MAAMO,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE;UACnDZ,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;QACD,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,GAAG;MACvB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK;MACtC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}